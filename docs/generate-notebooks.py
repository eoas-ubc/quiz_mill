# ---
# jupyter:
#   jupytext:
#     text_representation:
#       extension: .py
#       format_name: percent
#       format_version: '1.3'
#       jupytext_version: 1.10.3
#   kernelspec:
#     display_name: Python 3
#     language: python
#     name: python3
# ---

# %% [markdown]
# # Generate Notebooks
# Script to generate notebooks with random parameters. (Specific to Two Layers quizzes)

# %% [markdown]
# ## Running the script

# %% language="bash"
# NUM=10
# python ../quiz_mill/generate_notebooks.py -n $NUM

# %% [markdown]
# ## How the script works

# %% [markdown]
# Preconditions: 
# 1. **two_layers.ipynb** is in **output/** folder.
# 2. **notebooks/output/unfiltered/** folder exists.

# %% [markdown]
# ### Import libraries

# %%
import papermill as pm
import argparse
import random

# %% [markdown]
# ### Main function
# 1. Instantiate an ArgumentParser object which allows users to input the number of the notebooks they want to generate
# 2. Generate random parameters
# 3. Inject the random parameters into a new notebook using papermill library

# %%
# Generates specified number of two_layers.ipynb notebooks with random parameters
# Example command to generate 5 notebooks with random parameters:
#   python generate_notebooks.py -n 5

if __name__=="__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-n','--number', required=True)

    io_args = parser.parse_args()
    num_of_quizzes = int(io_args.number)

    for i in range(num_of_quizzes):
        sol =       round(random.uniform(0.0, 500.0), 1)
        epsilon1 =  round(random.uniform(0.0, 1.0), 2)
        epsilon1 =  round(random.uniform(0.0, 1.0), 2)
        albedo =    round(random.uniform(0.0, 1.0), 2)

        pm.execute_notebook(
            'notebooks/two_layers.ipynb',
            'notebooks/output/unfiltered/output_two_layers{}.ipynb'.format(i+1), #TODO: replace hard-coded "two_layers" string
            parameters=dict(sol=sol, epsilon1=epsilon1, epsilon2=epsilon1, albedo=albedo)
        )

# %% [markdown]
# ## Sample output
# Example of a notebook generated by this script.
# ![Example notebook output](output_generate_notebooks.png)
